Указатель - переменная, значением которой является адрес памяти
{int  a, *b; //инициализируем переменную и указатель
a = 100; //задаем значение переменной а
b = &a; //указатель b будет ссылаться на адрес, где хранится переменная a
cout << b; //выводим адрес указателя b
cout << *b; //выводим его значение
(*b)++; // а и *b связаны одинм адресом памяти, поэтому при изменении значения b, изменяется и а.
то бишь мы изменяем значение адреса, на который ссылается b, и теперь его значение соотвествует адресу другой переменной 
cout << *b;}

Существует и двухуровневая адресация, при объявлении указателя на указатель.
одноуровневая адресация:
ячейчка В(Указатель) -> адрес -> ячейка А(Переменная)

двухуровневая адресация: 
ячейка С(Указатель) -> адрес -> ячейчка В(Указатель) -> адрес -> ячейка А(Переменная)

{int n, *p, **q; //инициализируем переменную и указатели
p = &n; //p ссылается на адрес n
q = &p; //q ссылается на адрес p
n = 100;
(*p)+=5; приманипуляции со значением p, изменяется и значение n, т.к. они связаны по адресу
(**q)--; //также при манипуляции со значением q будет меняться и n по той же причине
}

Васильев А.Н. С++ (с.91)